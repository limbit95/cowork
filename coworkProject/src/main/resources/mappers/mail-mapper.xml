<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.cowork.employee.mail.model.mapper.MailMapper"> 

	<!-- 전체 메일 목록 조회 -->
	 <select id="mailList">
	    SELECT 
	        M.MAIL_NO,
	        M.MAIL_TITLE,
	        M.MAIL_CONTENT,
	        TO_CHAR(M.MAIL_WRITE_DATE, 'YY-MM-DD HH24:MI') AS MAIL_WRITE_DATE,
	        M.MAIL_FLAG,
	        M.EMP_CODE AS SENDER_EMP_CODE,
	        M.READ_FL,
	        SENDER.EMP_ID AS senderMail,
	        SENDER.EMP_LAST_NAME || SENDER.EMP_FIRST_NAME AS sender,
	        SENDER_TEAM.TEAM_NM AS senderTeamNm,
	        COMPANY.DOMAIN AS senderDomain,
	        RECIPIENT.EMP_CODE AS RECIPIENT_EMP_CODE,
	        RECIPIENT.EMP_ID AS recipientMail,
	        RECIPIENT.EMP_LAST_NAME || RECIPIENT.EMP_FIRST_NAME AS recipient,
	        RECIPIENT_TEAM.TEAM_NM AS recipientTeamNm,
	        REF_EMP.EMP_CODE AS REFERENCE_EMP_CODE,
	        REF_EMP.EMP_ID AS refererMail,
	        REF_EMP.EMP_LAST_NAME || REF_EMP.EMP_FIRST_NAME AS referer,
	        REF_TEAM.TEAM_NM AS refererTeamNm
	    FROM 
	        MAIL M
	    LEFT JOIN 
	        (SELECT 
	            R.MAIL_NO,R.EMP_CODE,
	            ROW_NUMBER() OVER (PARTITION BY R.MAIL_NO ORDER BY R.EMP_CODE) AS RN 
	         FROM RECIPIENT R 
	         WHERE R.REFERENCE_FL = '1') R ON M.MAIL_NO = R.MAIL_NO AND R.RN = 1
	    LEFT JOIN 
	        EMPLOYEE SENDER ON M.EMP_CODE = SENDER.EMP_CODE
	    LEFT JOIN 
	        TEAM SENDER_TEAM ON SENDER.TEAM_NO = SENDER_TEAM.TEAM_NO
	    LEFT JOIN 
	        COMPANY ON SENDER.COM_NO = COMPANY.COM_NO
	    LEFT JOIN 
	        EMPLOYEE RECIPIENT ON R.EMP_CODE = RECIPIENT.EMP_CODE
	    LEFT JOIN 
	        TEAM RECIPIENT_TEAM ON RECIPIENT.TEAM_NO = RECIPIENT_TEAM.TEAM_NO
	    LEFT JOIN 
	        (SELECT 
	            REF.MAIL_NO,
	            REF.EMP_CODE,
	            ROW_NUMBER() OVER (PARTITION BY REF.MAIL_NO ORDER BY REF.EMP_CODE) AS RN 
	         FROM RECIPIENT REF 
	         WHERE REF.REFERENCE_FL = '2') REF ON M.MAIL_NO = REF.MAIL_NO AND REF.RN = 1
	    LEFT JOIN 
	        EMPLOYEE REF_EMP ON REF.EMP_CODE = REF_EMP.EMP_CODE
	    LEFT JOIN 
	        TEAM REF_TEAM ON REF_EMP.TEAM_NO = REF_TEAM.TEAM_NO
	    WHERE 
	        (R.EMP_CODE = #{empCode} OR M.EMP_CODE = #{empCode})
	       	AND M.MAIL_FLAG = '1'
	        <if test='mailQuery != null'>
	            <choose>
	                <when test='key == "1"'> <!-- 제목 -->
	                    AND M.MAIL_TITLE LIKE '%' || #{mailQuery} || '%'
	                </when>
	                <when test='key == "2"'> <!-- 내용 -->
	                    AND M.MAIL_CONTENT LIKE '%' || #{mailQuery} || '%'
	                </when>
	                <otherwise> <!-- 발신자 / 수신자 -->
	                    AND (
	                        SENDER_TEAM.TEAM_NM || ' ' || SENDER.EMP_LAST_NAME || SENDER.EMP_FIRST_NAME LIKE '%' || #{mailQuery} || '%'
	                        OR EXISTS (
	                            SELECT 1
	                            FROM RECIPIENT R2
	                            LEFT JOIN EMPLOYEE RECIPIENT2 ON R2.EMP_CODE = RECIPIENT2.EMP_CODE
	                            WHERE R2.MAIL_NO = M.MAIL_NO
	                            AND (RECIPIENT2.EMP_LAST_NAME || RECIPIENT2.EMP_FIRST_NAME LIKE '%' || #{mailQuery} || '%')
	                        )
	                    )    
	                </otherwise>
	            </choose>
	        </if>
	    ORDER BY 
	        M.MAIL_WRITE_DATE DESC
	</select>

	
	<!-- 메일 개수 조회 -->
	<select id="listCount">
	   SELECT COUNT(DISTINCT M.MAIL_NO)
	    FROM MAIL M
	    LEFT JOIN 
	        RECIPIENT R ON M.MAIL_NO = R.MAIL_NO
	    LEFT JOIN 
	        EMPLOYEE SENDER ON M.EMP_CODE = SENDER.EMP_CODE
	    LEFT JOIN 
	        TEAM SENDER_TEAM ON SENDER.TEAM_NO = SENDER_TEAM.TEAM_NO
	    LEFT JOIN 
	        EMPLOYEE RECIPIENT ON R.EMP_CODE = RECIPIENT.EMP_CODE
	    LEFT JOIN 
	        TEAM RECIPIENT_TEAM ON RECIPIENT.TEAM_NO = RECIPIENT_TEAM.TEAM_NO
	    LEFT JOIN 
	        DEPARTMENT SENDER_DEPT ON SENDER_TEAM.DEPT_NO = SENDER_DEPT.DEPT_NO
	    LEFT JOIN 
	        DEPARTMENT RECIPIENT_DEPT ON RECIPIENT_TEAM.DEPT_NO = RECIPIENT_DEPT.DEPT_NO
	    WHERE 
	        (M.EMP_CODE = #{empCode} OR R.EMP_CODE = #{empCode})
	        AND M.MAIL_FLAG = '1'
	        <if test='mailQuery != null'>
	            <choose>
	                <when test='key == "1"'> <!-- 제목 -->
	                    AND M.MAIL_TITLE LIKE '%' || #{query} || '%'
	                </when>
	                <when test='key == "2"'> <!-- 내용 -->
	                    AND M.MAIL_CONTENT LIKE '%' || #{query} || '%'
	                </when>
	                <otherwise> <!-- 발신자 / 수신자 -->
	                    AND (
	                        SENDER_DEPT.DEPT_NM || ' ' || SENDER.EMP_LAST_NAME || SENDER.EMP_FIRST_NAME LIKE '%' || #{query} || '%' 
	                        OR
	                        RECIPIENT_DEPT.DEPT_NM || ' ' || RECIPIENT.EMP_LAST_NAME || RECIPIENT.EMP_FIRST_NAME LIKE '%' || #{query} || '%' 
	                    )    
	                </otherwise>
	            </choose>
	        </if>
		</select>
	
	<!-- 전체메일함 개수 조회 -->
	<select id="mailCount" resultType="int">
		 SELECT COUNT(DISTINCT M.MAIL_NO)
	     FROM MAIL M
	     LEFT JOIN 
	        RECIPIENT R ON M.MAIL_NO = R.MAIL_NO
	     WHERE 
	        (M.EMP_CODE = #{empCode} OR R.EMP_CODE = #{empCode})
	        AND M.MAIL_FLAG = '1'
	</select>
	
	<!--  안 읽은 메일 개수 조회 -->
	<select id="noReadCount" resultType="int">
	    SELECT COALESCE(SUM(CASE WHEN M.READ_FL = '1' THEN 1 ELSE 0 END), 0)
    	FROM (
        SELECT DISTINCT M.MAIL_NO, M.READ_FL
        FROM MAIL M
        LEFT JOIN RECIPIENT R ON M.MAIL_NO = R.MAIL_NO
        WHERE (M.EMP_CODE = #{empCode} OR R.EMP_CODE = #{empCode})
        AND M.MAIL_FLAG = '1'
    ) M
	</select>
	
	<!-- 메일 상세 조회 -->
	<select id="mailDetail">
	   SELECT 
	        M.MAIL_NO AS mailNo,
	        M.MAIL_TITLE AS mailTitle,
	        M.MAIL_CONTENT AS mailContent,
	        TO_CHAR(M.MAIL_WRITE_DATE, 'YY-MM-DD HH24:MI') AS mailWriteDate,
	        M.MAIL_FLAG AS mailFlag,
	        M.EMP_CODE AS empCode,
	        M.READ_FL AS readFl,
	        SENDER.EMP_CODE AS senderEmpCode, 
	        SENDER.EMP_ID AS senderMail,
	        SENDER.EMP_LAST_NAME || SENDER.EMP_FIRST_NAME AS sender,
	        SENDER_TEAM.TEAM_NM AS senderTeamNm,
	        COMPANY.DOMAIN AS senderDomain
	    FROM 
	        MAIL M
	    LEFT JOIN 
	        EMPLOYEE SENDER ON M.EMP_CODE = SENDER.EMP_CODE
	    LEFT JOIN 
	        TEAM SENDER_TEAM ON SENDER.TEAM_NO = SENDER_TEAM.TEAM_NO
	    LEFT JOIN 
	        COMPANY ON SENDER.COM_NO = COMPANY.COM_NO
	    WHERE 
	        M.MAIL_NO = #{mailNo}
	</select>
	
	<!-- 상세 파일리스트 조회 -->
	<select id="fileList">
		SELECT *
		FROM MAIL_FILE
		WHERE MAIL_NO = #{mailNo}
		ORDER BY FILE_ORDER
	</select>
	
	<!-- 보낸 메일함 목록 조회 -->
	<select id="sentMailList">
	    WITH MailData AS (
	        SELECT 
	            M.MAIL_NO,
	            M.MAIL_TITLE,
	            M.MAIL_CONTENT,
	            TO_CHAR(M.MAIL_WRITE_DATE, 'YY-MM-DD HH24:MI') AS MAIL_WRITE_DATE,
	            M.MAIL_FLAG,
	            M.READ_FL,
	            M.EMP_CODE AS SENDER_EMP_CODE,
	            SENDER.EMP_ID AS SENDER_MAIL,
	            SENDER.EMP_LAST_NAME || SENDER.EMP_FIRST_NAME AS SENDER,
	            SENDER_TEAM.TEAM_NM AS SENDER_TEAM_NM,
	            COMPANY.DOMAIN AS SENDER_DOMAIN,
	            R.EMP_CODE AS RECIPIENT_EMP_CODE,
	            RECIPIENT.EMP_ID AS RECIPIENT_MAIL,
	            RECIPIENT.EMP_LAST_NAME || RECIPIENT.EMP_FIRST_NAME AS RECIPIENT,
	            RECIPIENT_TEAM.TEAM_NM AS RECIPIENT_TEAM_NM,
	            MAIL_FILE.FILE_NO,
	            MAIL_FILE.FILE_PATH,
	            MAIL_FILE.FILE_ORIGIN_NAME,
	            MAIL_FILE.FILE_RENAME,
	            MAIL_FILE.FILE_UPLOAD_DATE,
	            MAIL_FILE.FILE_ORDER,
	            REF_EMP.EMP_CODE AS REFERER_EMP_CODE,
	            REF_EMP.EMP_ID AS REFERER_MAIL,
	            REF_EMP.EMP_LAST_NAME || REF_EMP.EMP_FIRST_NAME AS REFERER,
	            REF_TEAM.TEAM_NM AS REFERER_TEAM_NM,
	            ROW_NUMBER() OVER (PARTITION BY M.MAIL_NO ORDER BY M.MAIL_NO) AS RN
	        FROM 
	            MAIL M
	        LEFT JOIN 
	            RECIPIENT R ON M.MAIL_NO = R.MAIL_NO AND R.REFERENCE_FL = '1'
	        LEFT JOIN 
	            EMPLOYEE SENDER ON M.EMP_CODE = SENDER.EMP_CODE
	        LEFT JOIN 
	            TEAM SENDER_TEAM ON SENDER.TEAM_NO = SENDER_TEAM.TEAM_NO
	        LEFT JOIN 
	            COMPANY ON SENDER.COM_NO = COMPANY.COM_NO
	        LEFT JOIN 
	            EMPLOYEE RECIPIENT ON R.EMP_CODE = RECIPIENT.EMP_CODE
	        LEFT JOIN 
	            TEAM RECIPIENT_TEAM ON RECIPIENT.TEAM_NO = RECIPIENT_TEAM.TEAM_NO
	        LEFT JOIN 
	            MAIL_FILE ON M.MAIL_NO = MAIL_FILE.MAIL_NO
	        LEFT JOIN 
	            RECIPIENT REF ON M.MAIL_NO = REF.MAIL_NO AND REF.REFERENCE_FL = '2'
	        LEFT JOIN 
	            EMPLOYEE REF_EMP ON REF.EMP_CODE = REF_EMP.EMP_CODE
	        LEFT JOIN 
	            TEAM REF_TEAM ON REF_TEAM.TEAM_NO = REF_TEAM.TEAM_NO
	        WHERE 
	            M.EMP_CODE = #{empCode}
	            AND M.MAIL_FLAG = '1'
	            <if test='mailQuery != null'>
	                <choose>
	                    <when test='key == "1"'> <!-- 제목 -->
	                        AND M.MAIL_TITLE LIKE '%' || #{mailQuery} || '%'
	                    </when>
	                    <when test='key == "2"'> <!-- 내용 -->
	                        AND M.MAIL_CONTENT LIKE '%' || #{mailQuery} || '%'
	                    </when>
	                    <otherwise> <!-- 발신자 / 수신자 -->
	                        AND (
	                            SENDER_TEAM.TEAM_NM || ' ' || SENDER.EMP_LAST_NAME || SENDER.EMP_FIRST_NAME LIKE '%' || #{mailQuery} || '%'
	                            OR RECIPIENT_TEAM.TEAM_NM || ' ' || RECIPIENT.EMP_LAST_NAME || RECIPIENT.EMP_FIRST_NAME LIKE '%' || #{mailQuery} || '%'
	                        )    
	                    </otherwise>
	                </choose>
	            </if>
		    )
		    SELECT *
		    FROM MailData
		    WHERE RN = 1
		    ORDER BY 
		        MAIL_WRITE_DATE DESC
		</select>

	<!-- 보낸 메일함 개수 조회 -->
	<select id="sentListCount" resultType="int">
    SELECT COUNT(DISTINCT M.MAIL_NO)
	    FROM MAIL M
	    LEFT JOIN 
	        RECIPIENT R ON M.MAIL_NO = R.MAIL_NO
	    LEFT JOIN 
	        EMPLOYEE SENDER ON M.EMP_CODE = SENDER.EMP_CODE
	    LEFT JOIN 
	        TEAM SENDER_TEAM ON SENDER.TEAM_NO = SENDER_TEAM.TEAM_NO
	    LEFT JOIN 
	        EMPLOYEE RECIPIENT ON R.EMP_CODE = RECIPIENT.EMP_CODE
	    LEFT JOIN 
	        TEAM RECIPIENT_TEAM ON RECIPIENT.TEAM_NO = RECIPIENT_TEAM.TEAM_NO
	    LEFT JOIN 
	        DEPARTMENT SENDER_DEPT ON SENDER_TEAM.DEPT_NO = SENDER_DEPT.DEPT_NO
	    LEFT JOIN 
	        DEPARTMENT RECIPIENT_DEPT ON RECIPIENT_TEAM.DEPT_NO = RECIPIENT_DEPT.DEPT_NO
	    WHERE 
	        M.EMP_CODE = #{empCode}
	        AND M.MAIL_FLAG = '1'
	        <if test='mailQuery != null'>
	            <choose>
	                <when test='key == "1"'> <!-- 제목 -->
	                    AND M.MAIL_TITLE LIKE '%' || #{query} || '%'
	                </when>
	                <when test='key == "2"'> <!-- 내용 -->
	                    AND M.MAIL_CONTENT LIKE '%' || #{query} || '%'
	                </when>
	                <otherwise> <!-- 발신자 / 수신자 -->
	                    AND (
	                        SENDER_DEPT.DEPT_NM || ' ' || SENDER.EMP_LAST_NAME || SENDER.EMP_FIRST_NAME LIKE '%' || #{query} || '%' 
	                        OR
	                        RECIPIENT_DEPT.DEPT_NM || ' ' || RECIPIENT.EMP_LAST_NAME || RECIPIENT.EMP_FIRST_NAME LIKE '%' || #{query} || '%' 
	                    )    
	                </otherwise>
	            </choose>
	        </if>
		</select>
	
	
	<!-- 보낸 메일함 개수 조회 -->
	<select id="sentMailCount" resultType="int">
    	SELECT COUNT(DISTINCT M.MAIL_NO)
	     FROM MAIL M
	     LEFT JOIN 
	        RECIPIENT R ON M.MAIL_NO = R.MAIL_NO
	     WHERE 
	        M.EMP_CODE = #{empCode}
	        AND M.MAIL_FLAG = '1'
	</select>

	
	<!-- 보낸 메일 안 읽은 메일 개수 조회 -->
	<select id="sentMailNoReadCount" resultType="int">
	    SELECT SUM(CASE WHEN M.READ_FL = '1' THEN 1 ELSE 0 END)
	    	FROM (
	        SELECT DISTINCT M.MAIL_NO, M.READ_FL
	        FROM MAIL M
	        LEFT JOIN RECIPIENT R ON M.MAIL_NO = R.MAIL_NO
	        WHERE M.EMP_CODE = #{empCode}
	        AND M.MAIL_FLAG = '1'
	    ) M
	</select>

	<!-- 받은 메일함 목록 조회 -->
	<select id="inMailList">
    	WITH MailData AS (
        SELECT 
            M.MAIL_NO,
            M.MAIL_TITLE,
            M.MAIL_CONTENT,
            TO_CHAR(M.MAIL_WRITE_DATE, 'YY-MM-DD HH24:MI') AS MAIL_WRITE_DATE,
            M.MAIL_FLAG,
            M.READ_FL,
            M.EMP_CODE AS SENDER_EMP_CODE,
            SENDER.EMP_ID AS SENDER_MAIL,
            SENDER.EMP_LAST_NAME || SENDER.EMP_FIRST_NAME AS SENDER,
            SENDER_TEAM.TEAM_NM AS SENDER_TEAM_NM,
            COMPANY.DOMAIN AS SENDER_DOMAIN,
            R.EMP_CODE AS RECIPIENT_EMP_CODE,
            RECIPIENT.EMP_ID AS RECIPIENT_MAIL,
            RECIPIENT.EMP_LAST_NAME || RECIPIENT.EMP_FIRST_NAME AS RECIPIENT,
            RECIPIENT_TEAM.TEAM_NM AS RECIPIENT_TEAM_NM,
            MAIL_FILE.FILE_NO,
            MAIL_FILE.FILE_PATH,
            MAIL_FILE.FILE_ORIGIN_NAME,
            MAIL_FILE.FILE_RENAME,
            MAIL_FILE.FILE_UPLOAD_DATE,
            MAIL_FILE.FILE_ORDER,
            REF_EMP.EMP_CODE AS REFERER_EMP_CODE,
            REF_EMP.EMP_ID AS REFERER_MAIL,
            REF_EMP.EMP_LAST_NAME || REF_EMP.EMP_FIRST_NAME AS REFERER,
            REF_TEAM.TEAM_NM AS REFERER_TEAM_NM,
            ROW_NUMBER() OVER (PARTITION BY M.MAIL_NO ORDER BY M.MAIL_NO) AS RN
        FROM 
            MAIL M
        LEFT JOIN 
            RECIPIENT R ON M.MAIL_NO = R.MAIL_NO AND R.REFERENCE_FL = '1'
        LEFT JOIN 
            EMPLOYEE SENDER ON M.EMP_CODE = SENDER.EMP_CODE
        LEFT JOIN 
            TEAM SENDER_TEAM ON SENDER.TEAM_NO = SENDER_TEAM.TEAM_NO
        LEFT JOIN 
            COMPANY ON SENDER.COM_NO = COMPANY.COM_NO
        LEFT JOIN 
            EMPLOYEE RECIPIENT ON R.EMP_CODE = RECIPIENT.EMP_CODE
        LEFT JOIN 
            TEAM RECIPIENT_TEAM ON RECIPIENT.TEAM_NO = RECIPIENT_TEAM.TEAM_NO
        LEFT JOIN 
            MAIL_FILE ON M.MAIL_NO = MAIL_FILE.MAIL_NO
        LEFT JOIN 
            RECIPIENT REF ON M.MAIL_NO = REF.MAIL_NO AND REF.REFERENCE_FL = '2'
        LEFT JOIN 
            EMPLOYEE REF_EMP ON REF.EMP_CODE = REF_EMP.EMP_CODE
        LEFT JOIN 
            TEAM REF_TEAM ON REF_TEAM.TEAM_NO = REF_TEAM.TEAM_NO
        WHERE 
            (R.EMP_CODE = #{empCode} OR REF.EMP_CODE = #{empCode})
            AND M.MAIL_FLAG = '1'
            <if test='mailQuery != null'>
                <choose>
                    <when test='key == "1"'> <!-- 제목 -->
                        AND M.MAIL_TITLE LIKE '%' || #{mailQuery} || '%'
                    </when>
                    <when test='key == "2"'> <!-- 내용 -->
                        AND M.MAIL_CONTENT LIKE '%' || #{mailQuery} || '%'
                    </when>
                    <otherwise> <!-- 발신자 / 수신자 -->
                        AND (
                            SENDER_TEAM.TEAM_NM || ' ' || SENDER.EMP_LAST_NAME || SENDER.EMP_FIRST_NAME LIKE '%' || #{mailQuery} || '%'
                            OR RECIPIENT_TEAM.TEAM_NM || ' ' || RECIPIENT.EMP_LAST_NAME || RECIPIENT.EMP_FIRST_NAME LIKE '%' || #{mailQuery} || '%'
                        )    
                    </otherwise>
                </choose>
            </if>
		    )
		    SELECT *
		    FROM MailData
		    WHERE RN = 1
		    ORDER BY 
		        MAIL_WRITE_DATE DESC
		</select>



	<!-- 받은 메일함 개수 조회 -->
	<select id="inMailCount" resultType="int">
	    SELECT NVL(COUNT(*), 0)
	    FROM MAIL M
	    LEFT JOIN RECIPIENT R ON M.MAIL_NO = R.MAIL_NO
	    WHERE R.EMP_CODE = #{empCode} 
	    AND M.MAIL_FLAG = '1'
	</select>
	
	<!-- 받은 메일 안 읽은 메일 개수 조회 -->
	<select id="inMailNoReadCount" resultType="int">
	    SELECT NVL(SUM(CASE WHEN M.READ_FL = '1' THEN 1 ELSE 0 END), 0)
	    FROM MAIL M
	    LEFT JOIN RECIPIENT R ON M.MAIL_NO = R.MAIL_NO
	    WHERE R.EMP_CODE = #{empCode}
	    AND M.MAIL_FLAG = '1'
	</select>
	
	<!-- 빋은 메일함 개수 조회 -->
	<select id="inListCount" resultType="int">
	    SELECT COUNT(*)
	    FROM MAIL M
	    LEFT JOIN RECIPIENT R ON M.MAIL_NO = R.MAIL_NO
	    LEFT JOIN EMPLOYEE SENDER ON M.EMP_CODE = SENDER.EMP_CODE
	    LEFT JOIN TEAM SENDER_TEAM ON SENDER.TEAM_NO = SENDER_TEAM.TEAM_NO
	    LEFT JOIN EMPLOYEE RECIPIENT ON R.EMP_CODE = RECIPIENT.EMP_CODE
	    LEFT JOIN TEAM RECIPIENT_TEAM ON RECIPIENT.TEAM_NO = RECIPIENT_TEAM.TEAM_NO
	    LEFT JOIN DEPARTMENT SENDER_DEPT ON SENDER_TEAM.DEPT_NO = SENDER_DEPT.DEPT_NO
	    LEFT JOIN DEPARTMENT RECIPIENT_DEPT ON RECIPIENT_TEAM.DEPT_NO = RECIPIENT_DEPT.DEPT_NO
	    WHERE R.EMP_CODE = #{empCode}
	    AND M.MAIL_FLAG = '1'
	    <if test='mailQuery != null'>
	        <choose>
	            <when test='key == "1"'> <!-- 제목 -->
	                AND M.MAIL_TITLE LIKE '%' || #{mailQuery} || '%'
	            </when>
	            <when test='key == "2"'> <!-- 내용 -->
	                AND M.MAIL_CONTENT LIKE '%' || #{mailQuery} || '%'
	            </when>
	            <otherwise> <!-- 발신자 / 수신자 -->
	                AND (
	                    SENDER_TEAM.TEAM_NM || ' ' || SENDER.EMP_LAST_NAME || SENDER.EMP_FIRST_NAME LIKE '%' || #{mailQuery} || '%'
	                    OR RECIPIENT_TEAM.TEAM_NM || ' ' || RECIPIENT.EMP_LAST_NAME || RECIPIENT.EMP_FIRST_NAME LIKE '%' || #{mailQuery} || '%'
	                )    
	            </otherwise>
	        </choose>
	    </if>
	</select>

	
	<!-- 사원 검색 -->
	<select id="employeeSearch">
		SELECT 
			 E.EMP_CODE,
			 E.EMP_ID,
			 T.TEAM_NM,
			 E.EMP_LAST_NAME || E.EMP_FIRST_NAME AS EMP_NAME,
			 P."POSITION_NM"
		FROM EMPLOYEE E
		LEFT JOIN TEAM T ON E.TEAM_NO = T.TEAM_NO 
		LEFT JOIN "POSITION" P ON E.POSITION_NO  = P."POSITION_NO"
		WHERE E.COM_NO = #{comNo}
		ORDER BY T.TEAM_NO, P."LEVEL"
	</select>
	
	<!-- 사원 검색 찾기 -->
	<select id="employeeListSearch">
		SELECT * 
		FROM (
			SELECT 
				 E.EMP_CODE,
				 E.EMP_ID,
				 T.TEAM_NM,
				 E.EMP_LAST_NAME || E.EMP_FIRST_NAME AS EMP_NAME,
				 P."POSITION_NM"
			FROM EMPLOYEE E
			LEFT JOIN TEAM T ON E.TEAM_NO = T.TEAM_NO 
			LEFT JOIN "POSITION" P ON E.POSITION_NO  = P."POSITION_NO"
			WHERE E.COM_NO = #{comNo}
			ORDER BY T.TEAM_NO, P."LEVEL"
		)
		WHERE 1=1
		AND (EMP_ID LIKE '%' || #{empName} || '%'
		OR TEAM_NM LIKE '%' || #{empName} || '%'
		OR EMP_NAME LIKE '%' || #{empName} || '%'
		OR POSITION_NM LIKE '%' || #{empName} || '%')
	</select>
	
	<!-- 메일 보내기 -->
	<insert id="sendMail" useGeneratedKeys="true" parameterType="Mail">
		<selectKey order="BEFORE" resultType="_int" keyProperty="mailNo">
			SELECT SEQ_MAIL.NEXTVAL FROM DUAL
		</selectKey>
			INSERT INTO MAIL
			(MAIL_NO, MAIL_TITLE, MAIL_CONTENT, MAIL_WRITE_DATE, MAIL_FLAG, EMP_CODE, READ_FL)
			VALUES (
				#{mailNo}, 
				#{mailTitle}, 
				#{mailContent}, 
				DEFAULT, 
				DEFAULT, 
				#{empCode}, 
				DEFAULT
			)
	</insert>
	
	<!-- 수신자 리스트 -->
	<insert id="recipientList" parameterType="list">
	    INSERT INTO RECIPIENT (RECIPIENT_NO, EMP_CODE, MAIL_NO, REFERENCE_FL)
	    <foreach collection="list" item="recipient" separator=" UNION ">
	        SELECT
	            NEXT_RECIPIENT_NO(),
	            #{recipient.empCode},
	            #{recipient.mailNo},
	            #{recipient.referenceFl}
	        FROM DUAL
	    </foreach>
	</insert>

	<!-- 메일 파일 insert -->
	<insert id="mailFileInsert" parameterType="list">
		INSERT INTO MAIL_FILE
		
		<foreach collection="list" item="file"
			open="(" close=")" separator=" UNION ">
			SELECT
				 NEXT_MAIL_FILE(),
				 #{file.filePath},
				 #{file.fileOriginName},
				 #{file.fileRename},
				 SYSDATE,
				 #{file.fileOrder},
				 #{file.mailNo}
			FROM DUAL
		</foreach>
	</insert>
	
	<!-- 수신자 리스트 -->
	<select id="getRecipients" resultType="Recipient">
	    SELECT 
	        R.RECIPIENT_NO AS recipientNo,
	        R.EMP_CODE AS empCode,
	        R.MAIL_NO AS mailNo,
	        E.EMP_LAST_NAME || E.EMP_FIRST_NAME AS recipient,
	        E.EMP_ID AS recipientMail,
	        T.TEAM_NM AS recipientTeamNm
	    FROM 
	        RECIPIENT R
	    LEFT JOIN 
	        EMPLOYEE E ON R.EMP_CODE = E.EMP_CODE
	    LEFT JOIN 
	        TEAM T ON E.TEAM_NO = T.TEAM_NO
	    WHERE 
	        R.MAIL_NO = #{mailNo} AND R.REFERENCE_FL = '1'
	</select>
	
	<!-- 참조자 리스트 -->
	<select id="getReferers" resultType="Recipient">
	    SELECT 
	        R.RECIPIENT_NO AS recipientNo,
	        R.EMP_CODE AS empCode,
	        R.MAIL_NO AS mailNo,
	        E.EMP_LAST_NAME || E.EMP_FIRST_NAME AS referer,
	        E.EMP_ID AS refererMail,
	        T.TEAM_NM AS refererTeamNm
	    FROM 
	        RECIPIENT R
	    LEFT JOIN 
	        EMPLOYEE E ON R.EMP_CODE = E.EMP_CODE
	    LEFT JOIN 
	        TEAM T ON E.TEAM_NO = T.TEAM_NO
	    WHERE 
	        R.MAIL_NO = #{mailNo} AND R.REFERENCE_FL = '2'
	</select>

	<!-- mailFlag 3(휴지통)으로 바꾸기 -->
	<update id="updateMailFlag">
        UPDATE mail
	    SET mail_flag = '3'
	    WHERE mail_no IN
	    <foreach item="mailId" collection="list" open="(" separator="," close=")">
	        #{mailId}
	    </foreach>
    </update>
    
    <!-- 조회 여부 업데이트 -->
	<update id="updateReadFl">
	    UPDATE MAIL
	    SET READ_FL = '2' 
	    WHERE MAIL_NO = #{mailNo}
	</update>

	<!-- 임시보관함 리스트 조회 -->
	<select id="outMailList">
	    WITH MailData AS (
	        SELECT 
	            M.MAIL_NO,
	            M.MAIL_TITLE,
	            M.MAIL_CONTENT,
	            TO_CHAR(M.MAIL_WRITE_DATE, 'YY-MM-DD HH24:MI') AS MAIL_WRITE_DATE,
	            M.MAIL_FLAG,
	            M.READ_FL,
	            M.EMP_CODE AS SENDER_EMP_CODE,
	            SENDER.EMP_ID AS SENDER_MAIL,
	            SENDER.EMP_LAST_NAME || SENDER.EMP_FIRST_NAME AS SENDER,
	            SENDER_TEAM.TEAM_NM AS SENDER_TEAM_NM,
	            COMPANY.DOMAIN AS SENDER_DOMAIN,
	            R.EMP_CODE AS RECIPIENT_EMP_CODE,
	            RECIPIENT.EMP_ID AS RECIPIENT_MAIL,
	            RECIPIENT.EMP_LAST_NAME || RECIPIENT.EMP_FIRST_NAME AS RECIPIENT,
	            RECIPIENT_TEAM.TEAM_NM AS RECIPIENT_TEAM_NM,
	            MAIL_FILE.FILE_NO,
	            MAIL_FILE.FILE_PATH,
	            MAIL_FILE.FILE_ORIGIN_NAME,
	            MAIL_FILE.FILE_RENAME,
	            MAIL_FILE.FILE_UPLOAD_DATE,
	            MAIL_FILE.FILE_ORDER,
	            REF_EMP.EMP_CODE AS REFERER_EMP_CODE,
	            REF_EMP.EMP_ID AS REFERER_MAIL,
	            REF_EMP.EMP_LAST_NAME || REF_EMP.EMP_FIRST_NAME AS REFERER,
	            REF_TEAM.TEAM_NM AS REFERER_TEAM_NM,
	            ROW_NUMBER() OVER (PARTITION BY M.MAIL_NO ORDER BY M.MAIL_NO) AS RN
	        FROM 
	            MAIL M
	        LEFT JOIN 
	            RECIPIENT R ON M.MAIL_NO = R.MAIL_NO AND R.REFERENCE_FL = '1'
	        LEFT JOIN 
	            EMPLOYEE SENDER ON M.EMP_CODE = SENDER.EMP_CODE
	        LEFT JOIN 
	            TEAM SENDER_TEAM ON SENDER.TEAM_NO = SENDER_TEAM.TEAM_NO
	        LEFT JOIN 
	            COMPANY ON SENDER.COM_NO = COMPANY.COM_NO
	        LEFT JOIN 
	            EMPLOYEE RECIPIENT ON R.EMP_CODE = RECIPIENT.EMP_CODE
	        LEFT JOIN 
	            TEAM RECIPIENT_TEAM ON RECIPIENT.TEAM_NO = RECIPIENT_TEAM.TEAM_NO
	        LEFT JOIN 
	            MAIL_FILE ON M.MAIL_NO = MAIL_FILE.MAIL_NO
	        LEFT JOIN 
	            RECIPIENT REF ON M.MAIL_NO = REF.MAIL_NO AND REF.REFERENCE_FL = '2'
	        LEFT JOIN 
	            EMPLOYEE REF_EMP ON REF.EMP_CODE = REF_EMP.EMP_CODE
	        LEFT JOIN 
	            TEAM REF_TEAM ON REF_TEAM.TEAM_NO = REF_TEAM.TEAM_NO
	        WHERE 
	            M.EMP_CODE = #{empCode}
	            AND M.MAIL_FLAG = '2'
	            <if test='mailQuery != null'>
	                <choose>
	                    <when test='key == "1"'> <!-- 제목 -->
	                        AND M.MAIL_TITLE LIKE '%' || #{mailQuery} || '%'
	                    </when>
	                    <when test='key == "2"'> <!-- 내용 -->
	                        AND M.MAIL_CONTENT LIKE '%' || #{mailQuery} || '%'
	                    </when>
	                    <otherwise> <!-- 발신자 / 수신자 -->
	                        AND (
	                            SENDER_TEAM.TEAM_NM || ' ' || SENDER.EMP_LAST_NAME || SENDER.EMP_FIRST_NAME LIKE '%' || #{mailQuery} || '%'
	                            OR RECIPIENT_TEAM.TEAM_NM || ' ' || RECIPIENT.EMP_LAST_NAME || RECIPIENT.EMP_FIRST_NAME LIKE '%' || #{mailQuery} || '%'
	                        )    
	                    </otherwise>
	                </choose>
	            </if>
		    )
		    SELECT *
		    FROM MailData
		    WHERE RN = 1
		    ORDER BY 
		        MAIL_WRITE_DATE DESC
		</select>
	
	<!-- 임시보관함 리스트 개수 -->
	<select id="outListCount" resultType="int">
    	SELECT COUNT(DISTINCT M.MAIL_NO)
	    FROM MAIL M
	    LEFT JOIN 
	        RECIPIENT R ON M.MAIL_NO = R.MAIL_NO
	    LEFT JOIN 
	        EMPLOYEE SENDER ON M.EMP_CODE = SENDER.EMP_CODE
	    LEFT JOIN 
	        TEAM SENDER_TEAM ON SENDER.TEAM_NO = SENDER_TEAM.TEAM_NO
	    LEFT JOIN 
	        EMPLOYEE RECIPIENT ON R.EMP_CODE = RECIPIENT.EMP_CODE
	    LEFT JOIN 
	        TEAM RECIPIENT_TEAM ON RECIPIENT.TEAM_NO = RECIPIENT_TEAM.TEAM_NO
	    LEFT JOIN 
	        DEPARTMENT SENDER_DEPT ON SENDER_TEAM.DEPT_NO = SENDER_DEPT.DEPT_NO
	    LEFT JOIN 
	        DEPARTMENT RECIPIENT_DEPT ON RECIPIENT_TEAM.DEPT_NO = RECIPIENT_DEPT.DEPT_NO
	    WHERE 
	        M.EMP_CODE = #{empCode}
	        AND M.MAIL_FLAG = '2'
	        <if test='mailQuery != null'>
	            <choose>
	                <when test='key == "1"'> <!-- 제목 -->
	                    AND M.MAIL_TITLE LIKE '%' || #{query} || '%'
	                </when>
	                <when test='key == "2"'> <!-- 내용 -->
	                    AND M.MAIL_CONTENT LIKE '%' || #{query} || '%'
	                </when>
	                <otherwise> <!-- 발신자 / 수신자 -->
	                    AND (
	                        SENDER_DEPT.DEPT_NM || ' ' || SENDER.EMP_LAST_NAME || SENDER.EMP_FIRST_NAME LIKE '%' || #{query} || '%' 
	                        OR
	                        RECIPIENT_DEPT.DEPT_NM || ' ' || RECIPIENT.EMP_LAST_NAME || RECIPIENT.EMP_FIRST_NAME LIKE '%' || #{query} || '%' 
	                    )    
	                </otherwise>
	            </choose>
	        </if>
		</select>
		
		<!-- 휴지통 리스트 조회 -->
		<select id="binList">
	    	SELECT 
	        M.MAIL_NO,
	        M.MAIL_TITLE,
	        M.MAIL_CONTENT,
	        TO_CHAR(M.MAIL_WRITE_DATE, 'YY-MM-DD HH24:MI') AS MAIL_WRITE_DATE,
	        M.MAIL_FLAG,
	        M.EMP_CODE AS SENDER_EMP_CODE,
	        M.READ_FL,
	        SENDER.EMP_ID AS senderMail,
	        SENDER.EMP_LAST_NAME || SENDER.EMP_FIRST_NAME AS sender,
	        SENDER_TEAM.TEAM_NM AS senderTeamNm,
	        COMPANY.DOMAIN AS senderDomain,
	        RECIPIENT.EMP_CODE AS RECIPIENT_EMP_CODE,
	        RECIPIENT.EMP_ID AS recipientMail,
	        RECIPIENT.EMP_LAST_NAME || RECIPIENT.EMP_FIRST_NAME AS recipient,
	        RECIPIENT_TEAM.TEAM_NM AS recipientTeamNm,
	        REF_EMP.EMP_CODE AS REFERENCE_EMP_CODE,
	        REF_EMP.EMP_ID AS refererMail,
	        REF_EMP.EMP_LAST_NAME || REF_EMP.EMP_FIRST_NAME AS referer,
	        REF_TEAM.TEAM_NM AS refererTeamNm
	    FROM 
	        MAIL M
	    LEFT JOIN 
	        (SELECT 
	            R.MAIL_NO,R.EMP_CODE,
	            ROW_NUMBER() OVER (PARTITION BY R.MAIL_NO ORDER BY R.EMP_CODE) AS RN 
	         FROM RECIPIENT R 
	         WHERE R.REFERENCE_FL = '1') R ON M.MAIL_NO = R.MAIL_NO AND R.RN = 1
	    LEFT JOIN 
	        EMPLOYEE SENDER ON M.EMP_CODE = SENDER.EMP_CODE
	    LEFT JOIN 
	        TEAM SENDER_TEAM ON SENDER.TEAM_NO = SENDER_TEAM.TEAM_NO
	    LEFT JOIN 
	        COMPANY ON SENDER.COM_NO = COMPANY.COM_NO
	    LEFT JOIN 
	        EMPLOYEE RECIPIENT ON R.EMP_CODE = RECIPIENT.EMP_CODE
	    LEFT JOIN 
	        TEAM RECIPIENT_TEAM ON RECIPIENT.TEAM_NO = RECIPIENT_TEAM.TEAM_NO
	    LEFT JOIN 
	        (SELECT 
	            REF.MAIL_NO,
	            REF.EMP_CODE,
	            ROW_NUMBER() OVER (PARTITION BY REF.MAIL_NO ORDER BY REF.EMP_CODE) AS RN 
	         FROM RECIPIENT REF 
	         WHERE REF.REFERENCE_FL = '2') REF ON M.MAIL_NO = REF.MAIL_NO AND REF.RN = 1
	    LEFT JOIN 
	        EMPLOYEE REF_EMP ON REF.EMP_CODE = REF_EMP.EMP_CODE
	    LEFT JOIN 
	        TEAM REF_TEAM ON REF_EMP.TEAM_NO = REF_TEAM.TEAM_NO
	    WHERE 
	        (R.EMP_CODE = #{empCode} OR M.EMP_CODE = #{empCode})
	       	AND M.MAIL_FLAG = '3'
	        <if test='mailQuery != null'>
	            <choose>
	                <when test='key == "1"'> <!-- 제목 -->
	                    AND M.MAIL_TITLE LIKE '%' || #{mailQuery} || '%'
	                </when>
	                <when test='key == "2"'> <!-- 내용 -->
	                    AND M.MAIL_CONTENT LIKE '%' || #{mailQuery} || '%'
	                </when>
	                <otherwise> <!-- 발신자 / 수신자 -->
	                    AND (
	                        SENDER_TEAM.TEAM_NM || ' ' || SENDER.EMP_LAST_NAME || SENDER.EMP_FIRST_NAME LIKE '%' || #{mailQuery} || '%'
	                        OR EXISTS (
	                            SELECT 1
	                            FROM RECIPIENT R2
	                            LEFT JOIN EMPLOYEE RECIPIENT2 ON R2.EMP_CODE = RECIPIENT2.EMP_CODE
	                            WHERE R2.MAIL_NO = M.MAIL_NO
	                            AND (RECIPIENT2.EMP_LAST_NAME || RECIPIENT2.EMP_FIRST_NAME LIKE '%' || #{mailQuery} || '%')
	                        )
	                    )    
	                </otherwise>
	            </choose>
	        </if>
	    ORDER BY 
	        M.MAIL_WRITE_DATE DESC
		</select>
	
	<!-- 휴지통 리스트 개수  -->
	<select id="binListCount" resultType="int">
    	SELECT COUNT(DISTINCT M.MAIL_NO)
	    FROM MAIL M
	    LEFT JOIN 
	        RECIPIENT R ON M.MAIL_NO = R.MAIL_NO
	    LEFT JOIN 
	        EMPLOYEE SENDER ON M.EMP_CODE = SENDER.EMP_CODE
	    LEFT JOIN 
	        TEAM SENDER_TEAM ON SENDER.TEAM_NO = SENDER_TEAM.TEAM_NO
	    LEFT JOIN 
	        EMPLOYEE RECIPIENT ON R.EMP_CODE = RECIPIENT.EMP_CODE
	    LEFT JOIN 
	        TEAM RECIPIENT_TEAM ON RECIPIENT.TEAM_NO = RECIPIENT_TEAM.TEAM_NO
	    LEFT JOIN 
	        DEPARTMENT SENDER_DEPT ON SENDER_TEAM.DEPT_NO = SENDER_DEPT.DEPT_NO
	    LEFT JOIN 
	        DEPARTMENT RECIPIENT_DEPT ON RECIPIENT_TEAM.DEPT_NO = RECIPIENT_DEPT.DEPT_NO
	    WHERE 
	        (M.EMP_CODE = #{empCode} OR R.EMP_CODE = #{empCode})
	        AND M.MAIL_FLAG = '3'
	        <if test='mailQuery != null'>
	            <choose>
	                <when test='key == "1"'> <!-- 제목 -->
	                    AND M.MAIL_TITLE LIKE '%' || #{query} || '%'
	                </when>
	                <when test='key == "2"'> <!-- 내용 -->
	                    AND M.MAIL_CONTENT LIKE '%' || #{query} || '%'
	                </when>
	                <otherwise> <!-- 발신자 / 수신자 -->
	                    AND (
	                        SENDER_DEPT.DEPT_NM || ' ' || SENDER.EMP_LAST_NAME || SENDER.EMP_FIRST_NAME LIKE '%' || #{query} || '%' 
	                        OR
	                        RECIPIENT_DEPT.DEPT_NM || ' ' || RECIPIENT.EMP_LAST_NAME || RECIPIENT.EMP_FIRST_NAME LIKE '%' || #{query} || '%' 
	                    )    
	                </otherwise>
	            </choose>
	        </if>
		</select>
		
		<!-- 휴지통에서 메일 복구 -->
		<update id="restoreMail">
			UPDATE MAIL SET
			MAIL_FLAG = #{mailFlag}
			WHERE
			MAIL_NO = #{mailNo}
		</update>

		<!-- 휴지통에서 메일 영구 삭제 -->
		<delete id="eliminateMail">
			DELETE FROM MAIL 
			WHERE MAIL_NO = #{mailId}
		</delete>
		
		<!-- 휴지통에서 메일파일 영구 삭제 -->
		  <delete id="eliminateRecipient">
	        DELETE FROM RECIPIENT 
	        WHERE MAIL_NO = #{mailId}
	      </delete>
	      
		<!-- 휴지통에서 메일 받은 사람 영구 삭제 -->
		<delete id="eliminateFile">
			DELETE FROM MAIL_FILE
			WHERE MAIL_NO = #{mailId}
		</delete>
		
		<!-- 답장하기 -->
		<insert id="replyMail" useGeneratedKeys="true" parameterType="Mail">
			<selectKey order="BEFORE" resultType="_int" keyProperty="mailNo">
				SELECT SEQ_MAIL.NEXTVAL FROM DUAL
			</selectKey>
			INSERT INTO MAIL
			(MAIL_NO, MAIL_TITLE, MAIL_CONTENT, MAIL_WRITE_DATE, MAIL_FLAG, EMP_CODE, READ_FL)
			VALUES (
				#{mailNo}, 
				#{mailTitle}, 
				#{mailContent}, 
				DEFAULT, 
				DEFAULT, 
				#{empCode}, 
				DEFAULT
			)
		</insert>
		
		<!-- 파일 순서 수정 -->
		<update id="mailFileUpdate">
			UPDATE MAIL_FILE SET
			FILE_ORDER = #{fileOrder}
			WHERE FILE_ORDER = #{orderUpdate}
			AND MAIL_NO = #{mailNo}
		</update>
		
		<!-- 파일 삭제 -->
		<delete id="deleteFile">
			DELETE FROM MAIL_FILE
			WHERE FILE_ORDER IN(${deleteOrder})
			AND MAIL_NO = #{mailNo}
		</delete>
		
		<select id="getMatchFiles">
			SELECT FROM MAIL_FILE
			WHERE FILE_ORDER_IN (${deleteOrder})
			AND MAIL_NO = #{mailNo}	
		</select>
		
		 <!-- 기존 파일 조회 -->
	    <select id="getMailFilesByMailNo" resultType="MailFile">
	        SELECT 
	            FILE_NO,
	            MAIL_NO,
	            FILE_PATH,
	            FILE_ORIGIN_NAME,
	            FILE_RENAME,
	            FILE_UPLOAD_DATE,
	            FILE_ORDER
	        FROM MAIL_FILE
	        WHERE MAIL_NO = #{mailNo}
	    </select>
	    
	    <!-- 임시 저장하기 -->
		<insert id="saveMail" useGeneratedKeys="true" parameterType="Mail">
			<selectKey order="BEFORE" resultType="_int" keyProperty="mailNo">
				SELECT SEQ_MAIL.NEXTVAL FROM DUAL
			</selectKey>
				INSERT INTO MAIL
				(MAIL_NO, MAIL_TITLE, MAIL_CONTENT, MAIL_WRITE_DATE, MAIL_FLAG, EMP_CODE, READ_FL)
				VALUES (
					#{mailNo}, 
					#{mailTitle}, 
					#{mailContent}, 
					DEFAULT, 
					'2', 
					#{empCode}, 
					DEFAULT
				)
		</insert>
		
		<!-- 임시저장 수정하기 -->
		<update id="updateSave">
			UPDATE MAIL SET 
			MAIL_TITLE = #{mailTitle},
			MAIL_CONTENT = #{mailContent}
			WHERE MAIL_NO = #{mailNo}	
		</update>
		
		<!-- 수신자 업데이트 -->
		<insert id="updateRecipient" parameterType="list">
		    INSERT INTO RECIPIENT (RECIPIENT_NO, EMP_CODE, MAIL_NO, REFERENCE_FL)
	    <foreach collection="list" item="recipient" separator=" UNION ALL ">
	        SELECT
	            NEXT_RECIPIENT_NO(),
	            #{recipient.empCode},
	            #{recipient.mailNo},
	            #{recipient.recipientNo}
	        FROM DUAL
	    </foreach>
		</insert>
		
		<!-- 수신인 지우기 -->
		<delete id="deleteRecipient" parameterType="map">
			    DELETE FROM RECIPIENT
			    WHERE MAIL_NO = #{mailNo}
			    AND RECIPIENT_NO = #{recipientNo}
		</delete>
		
		<!-- 수신인 업데이트 insert -->
		<insert id="insertRecipient">
	        INSERT INTO RECIPIENT 
		     VALUES (
		            NEXT_RECIPIENT_NO(),
		            #{empCode},
		            #{mailNo},
		            #{referenceFl}
		        )
		</insert>
		
		<!-- 임시보관에서의 전송 -->
		<update id="outSend">
			UPDATE MAIL SET 
			MAIL_TITLE = #{mailTitle},
			MAIL_CONTENT = #{mailContent},
			MAIL_FLAG = '1'
			WHERE MAIL_NO = #{mailNo}	
		</update>
		
	

</mapper>

	

	
	<!-- 파일 리스트 조회 - 상세
	<select id="getMailFiles" parameterType="int" resultType="MailFile">
	    SELECT * 
	    FROM 
	        MAIL_FILE
	    WHERE 
	        MAIL_NO = #{mailNo}
	    ORDER BY 
	        FILE_ORDER
	</select> -->




















