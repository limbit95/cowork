<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.cowork.employee.todo.model.mapper.TodoMapper"> 

	<!-- 할 일 목록 조회 -->
	<select id="selectTodoList"> 
	    SELECT * FROM TODO
	    WHERE EMP_CODE = 1
	    ORDER BY TODO_WRITE_DATE DESC
	</select>
	
	<!-- 검색한 경우 투두 개수 조회 -->
	<select id="getSearchCount">
		SELECT COUNT(*)
		FROM TODO t
		JOIN TODO_MANAGER tm ON t.TODO_NO = tm.TODO_NO 
		JOIN EMPLOYEE manager_emp ON manager_emp.EMP_CODE = tm.EMP_CODE
		JOIN EMPLOYEE request_emp ON request_emp.EMP_CODE = t.EMP_CODE
		WHERE t.TODO_TITLE LIKE '%' || #{todoQuery} || '%'
		OR t.TODO_CONTENT LIKE '%' || #{todoQuery} || '%'
		OR request_emp.EMP_LAST_NAME || request_emp.EMP_FIRST_NAME LIKE '%' || #{todoQuery} || '%'
		OR manager_emp.EMP_LAST_NAME || manager_emp.EMP_FIRST_NAME LIKE '%' || #{todoQuery} || '%'
	</select>
	
	<!-- 검색한 경우 목록 조회 -->
	<select id="todoQueryList">
		 SELECT t.*,  request_emp.EMP_LAST_NAME || request_emp.EMP_FIRST_NAME AS request_emp, 
              manager_emp.EMP_LAST_NAME || manager_emp.EMP_FIRST_NAME AS in_charge_emp
			FROM TODO t
			JOIN TODO_MANAGER tm ON t.TODO_NO = tm.TODO_NO
			JOIN EMPLOYEE manager_emp ON manager_emp.EMP_CODE = tm.EMP_CODE
			JOIN EMPLOYEE request_emp ON request_emp.EMP_CODE = t.EMP_CODE
			WHERE t.EMP_CODE = 1 
			AND (
			    t.TODO_TITLE LIKE '%' || #{todoQuery} || '%'
			    OR t.TODO_CONTENT LIKE '%' || #{todoQuery} || '%'
			    OR request_emp.EMP_LAST_NAME || request_emp.EMP_FIRST_NAME LIKE '%' || #{todoQuery} || '%'
			    OR manager_emp.EMP_LAST_NAME || manager_emp.EMP_FIRST_NAME LIKE '%' || #{todoQuery} || '%'
			)
			ORDER BY t.TODO_WRITE_DATE DESC
	</select>
	
	
	<select id="todoInCharge">
		 SELECT T.TODO_NO, T.TODO_TITLE, T.TODO_CONTENT, T.TODO_WRITE_DATE, T.TODO_END_DATE, T.TODO_COMPLETE, T.EMP_CODE
        FROM TODO T
        JOIN TODO_MANAGER TM ON T.TODO_NO = TM.TODO_NO
        WHERE T.EMP_CODE = TM.EMP_CODE
        <if test="sortBy == 'latest'">
            ORDER BY T.TODO_WRITE_DATE DESC
        </if>
        <if test="sortBy == 'registration'">
            ORDER BY T.TODO_WRITE_DATE ASC
        </if>
	</select>
	
	<!-- 요청 부분 수정 필요!! -->
	<select id="todoRequested"> 
		 SELECT T.TODO_NO, 
           T.TODO_TITLE, 
           T.TODO_CONTENT, 
           T.TODO_WRITE_DATE, 
           T.TODO_END_DATE, 
           T.TODO_COMPLETE, 
           T.EMP_CODE
	    FROM TODO T
	    LEFT JOIN TODO_MANAGER TM ON T.TODO_NO = TM.TODO_NO
	    JOIN EMPLOYEE E ON T.EMP_CODE = E.EMP_CODE
	    WHERE T.EMP_CODE = TM.EMP_CODE
	       OR T.EMP_CODE = 1
	    <choose>
	        <when test="sortBy == 'latest'">
	            ORDER BY T.TODO_WRITE_DATE DESC
	        </when>
	        <when test="sortBy == 'registration'">
	            ORDER BY T.TODO_WRITE_DATE ASC
	        </when>
	        <otherwise>
	            ORDER BY T.TODO_WRITE_DATE DESC
	        </otherwise>
	    </choose>
	</select>
	
	<select id="todoCompleted">
		SELECT T.TODO_NO, T.TODO_TITLE, T.TODO_CONTENT, T.TODO_WRITE_DATE, T.TODO_END_DATE, T.TODO_COMPLETE, T.EMP_CODE
        FROM TODO T
        WHERE T.TODO_COMPLETE = '2'
        <if test="sortBy == 'latest'">
            ORDER BY T.TODO_WRITE_DATE DESC
        </if>
        <if test="sortBy == 'registration'">
            ORDER BY T.TODO_WRITE_DATE ASC
        </if>
	</select>
	
	<select id="todoInProgress">
		SELECT T.TODO_NO, T.TODO_TITLE, T.TODO_CONTENT, T.TODO_WRITE_DATE, T.TODO_END_DATE, T.TODO_COMPLETE, T.EMP_CODE
        FROM TODO T
        WHERE T.TODO_COMPLETE = '1'
        <if test="sortBy == 'latest'">
            ORDER BY T.TODO_WRITE_DATE DESC
        </if>
        <if test="sortBy == 'registration'">
            ORDER BY T.TODO_WRITE_DATE ASC
        </if>
	</select>
	 
	
	
	
	
	<!-- 할 일 등록 -->
	<insert id="todoInsert">
	    <selectKey order="BEFORE" resultType="int" keyProperty="todoNo">
	        SELECT SEQ_TODO.NEXTVAL FROM DUAL
	    </selectKey>
	    INSERT INTO "TODO"
	    VALUES (
	        #{todoNo},
	        #{todoTitle},
	        #{todoContent},
	        DEFAULT,
	        #{todoEndDate},
	        DEFAULT,
	        1
	    )
	</insert>
	
	<!-- 파일 업로드시 등록 -->
	<insert id="insertUploadList" parameterType="list">
		INSERT INTO "TODO_FILE"
	    <foreach collection="list" item="file" 
	    		open ="(" close=")" separator=" UNION ">
	       SELECT NEXT_TODO_FILE_NO(), 
	       #{file.filePath}, #{file.fileOriginName}, 
	       #{file.fileRename}, SYSDATE, #{file.fileOrder}, #{file.todoNo}
	       FROM DUAL 
	    </foreach>
	</insert>
	
	<!-- 파일 등록
	
	<insert id="insertUploadList" parameterType="list">
    INSERT INTO TODO_FILE (
        FILE_NO, FILE_PATH, FILE_ORIGIN_NAME, 
        FILE_RENAME, UPLOAD_DATE, FILE_ORDER, TODO_NO
    )
    <foreach collection="list" item="file" index="index" separator=" UNION ALL ">
        SELECT NEXT_TODO_FILE_NO(), 
               #{file.filePath}, #{file.fileOriginName}, 
               #{file.fileRename}, SYSDATE, 
               #{file.fileOrder}, #{file.todoNo}
        FROM DUAL
    </foreach>
</insert>
	
	
	 -->
				
	<!-- 담당자 지정시 등록 -->
	<insert id="insertTodoManager" parameterType="Todo">
	        INSERT INTO "TODO_MANAGER" 
	        SELECT 
	            NEXT_TODO_MGR_NO(), 
	            emp.EMP_CODE, 
	            #{todoNo}
	        FROM 
	            Employee emp
	        WHERE 
	            CONCAT(emp.EMP_LAST_NAME, emp.EMP_FIRST_NAME) = #{inChargeEmp}
	</insert>

	<!-- 할 일 상세 -->
	<select id="todoDetail">
		SELECT 
		    t.TODO_NO,
		    t.TODO_TITLE,
		    t.TODO_CONTENT,
		    TO_CHAR(t.TODO_WRITE_DATE, 'YYYY-MM-DD') AS TODO_WRITE_DATE,
		    TO_CHAR(t.TODO_END_DATE, 'YYYY-MM-DD') AS TODO_END_DATE,
		    t.TODO_COMPLETE,
		    t.EMP_CODE,
		    CONCAT(e.EMP_LAST_NAME, e.EMP_FIRST_NAME) AS requestEmp,
		    tf.FILE_NO,
		    tf.FILE_PATH,
		    tf.FILE_ORIGIN_NAME,
		    tf.FILE_RENAME,
		    tf.FILE_UPLOAD_DATE,
		    tf.FILE_ORDER,
		    tm.TODO_MGR_NO,
		    tm.EMP_CODE AS MGR_EMP_CODE,
		    CONCAT(m.EMP_LAST_NAME, m.EMP_FIRST_NAME) AS inChargeEmp
		FROM 
		    TODO t
		LEFT JOIN 
		    TODO_FILE tf ON t.TODO_NO = tf.TODO_NO
		LEFT JOIN 
		    TODO_MANAGER tm ON t.TODO_NO = tm.TODO_NO
		LEFT JOIN 
		    EMPLOYEE e ON t.EMP_CODE = e.EMP_CODE
		LEFT JOIN 
		    EMPLOYEE m ON tm.EMP_CODE = m.EMP_CODE
		WHERE 
	    t.TODO_NO = #{todoNo}
	</select>  
	
	<!-- 파일 조회 -->
	<select id="todoFiles">
	SELECT 
		FILE_NO,
		FILE_PATH,
		FILE_ORIGIN_NAME,
		FILE_RENAME,
		FILE_UPLOAD_DATE,
		FILE_ORDER
	FROM "TODO_FILE"	
	WHERE TODO_NO = #{todoNo}	
	</select>
	
	<!-- 할 일 수정 -->
	<update id="todoUpdate">
		UPDATE "TODO"
		SET 
		TODO_TITLE = #{todoTitle},
		TODO_CONTENT = #{todoContent},
		TODO_END_DATE = #{todoEndDate}
		WHERE TODO_NO = #{todoNo}
	</update>
	
	<!-- 담당자 수정 -->
	  <update id="todoManagerUpdate">
        UPDATE "TODO_MANAGER" 
        SET EMP_CODE =(
        	SELECT EMP_CODE
        	FROM Employee
        	WHERE CONCAT(EMP_LAST_NAME, EMP_FIRST_NAME) = #{inChargeEmp} )
        WHERE TODO_NO = #{todoNo} 
	</update>
	
	<!-- 할 일 완료 여부 수정 -->
	<update id="updateTodoComplete" parameterType="map">
	    UPDATE "TODO"
	    SET TODO_COMPLETE = #{todoComplete}
	    WHERE TODO_NO = #{todoNo}
	</update>
	
	<!-- 할 일 삭제 -->
	<delete id="deleteTodos" parameterType="java.util.List">
	    DELETE FROM TODO
	    WHERE TODO_NO IN
	    <foreach item="todoId" index="index" collection="todoIds" open="(" separator="," close=")">
	        #{todoId}
	    </foreach>
	</delete>

	<!-- 담당자 삭제 -->
	<delete id="deleteTodoManager" parameterType="java.util.List">
	    DELETE FROM TODO_MANAGER
	    WHERE TODO_NO IN
	    <foreach item="todoId" index="index" collection="todoIds" open="(" separator="," close=")">
	        #{todoId}
	    </foreach>
	</delete>
	
	<!-- 파일 삭제 -->
	<delete id="deleteTodoFiles" parameterType="java.util.List">
	    DELETE FROM TODO_FILE
	    WHERE TODO_NO IN
	    <foreach item="todoId" index="index" collection="todoIds" open="(" separator="," close=")">
	        #{todoId}
	    </foreach>
	</delete>
	
	<!-- 파일 수정 시 기존 파일 삭제 -->
	<delete id="deleteOriginTodoFiles" parameterType="int">
	    DELETE FROM TODO_FILE
	    WHERE TODO_NO = #{todoNo}
	</delete>
	
 	<!--<update id="todoManagerUpdate">
		UPDATE TODO_MANAGER
		    SET EMP_CODE = (
		        CASE 
		            WHEN #{inChargeEmp} = '' THEN (
		                SELECT CONCAT(EMP_LAST_NAME, EMP_FIRST_NAME)
		                FROM Employee
		                WHERE EMP_CODE = #{empCode}
		            )
		            ELSE (
		                SELECT EMP_CODE
		                FROM Employee
		                WHERE CONCAT(EMP_LAST_NAME, EMP_FIRST_NAME) = #{inChargeEmp}
		            )
		        END
		    )
		    WHERE TODO_NO = #{todoNo};
	</update>-->

</mapper>






























