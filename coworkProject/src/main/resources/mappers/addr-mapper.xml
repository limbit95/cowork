<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.cowork.employee.addr.model.mapper.AddrMapper">
	
		<!-- 개인 주소록 그룹만 조회 -->
	<select id="selectGroupList" resultType="MyAddr">
		SELECT ADDR_BOOK_NO, ADDR_NAME, EMP_CODE
		FROM PERSONAL_ADDR_BOOK
		WHERE EMP_CODE = #{empCode}
		ORDER BY ADDR_BOOK_NO
	</select>
	
	<!-- 개인 주소록 그룹 인원 리스트 조회 -->
	<select id="getListCount">
		SELECT COUNT(*)
		FROM ADD_EMP E
		JOIN PERSONAL_ADDR_BOOK P ON(P.ADDR_BOOK_NO = E.ADDR_BOOK_NO)
		WHERE P.ADDR_BOOK_NO = #{groupCode}
		AND P.EMP_CODE = #{empCode}
	</select>
	
	<!-- 개인 주소록 전체 리스트 개수 조회 -->
	<select id="getFullListCount">
		SELECT E.EMP_CODE 
		FROM ADD_EMP E
		JOIN PERSONAL_ADDR_BOOK P ON(P.ADDR_BOOK_NO = E.ADDR_BOOK_NO)
		WHERE P.EMP_CODE = #{empCode}
		GROUP BY E.EMP_CODE
	</select>
	
	<!-- 주소록 그룹 코드 조회 -->
	<select id="getGroupCode" resultType="_int">
		SELECT ADDR_BOOK_NO 
		FROM PERSONAL_ADDR_BOOK 
		WHERE ADDR_NAME = #{groupName}
		AND EMP_CODE = #{empCode}
	</select>
	
	<!-- 주소록 그룹의 리스트 조회 -->
	<select id="selectAddrList">
		SELECT AE.EMP_CODE, EMP_LAST_NAME, EMP_FIRST_NAME, PHONE, EMP_EMAIL, 
		C.COM_NM, DEPT_NM, TEAM_NM, POSITION_NM, "LEVEL"
		FROM ADD_EMP AE
		JOIN PERSONAL_ADDR_BOOK P ON(P.ADDR_BOOK_NO = AE.ADDR_BOOK_NO)
		JOIN EMPLOYEE E ON(E.EMP_CODE = AE.EMP_CODE)
		JOIN COMPANY C ON(C.COM_NO = E.COM_NO)
		LEFT JOIN TEAM T USING(TEAM_NO)
		LEFT JOIN DEPARTMENT D ON(D.DEPT_NO = T.DEPT_NO)
		LEFT JOIN POSITION USING(POSITION_NO)
		WHERE E.EMP_DEL_FL = 'N'
		AND P.ADDR_BOOK_NO = #{groupCode}
		AND P.EMP_CODE =  #{empCode}
		ORDER BY "LEVEL", D.DEPT_NO, AE.ADD_EMP_NO ASC
	</select>
	
	<!-- 개인 주소록 전체 리스트 조회 -->
	<select id="selectAllAddrList">
		SELECT DISTINCT AE.EMP_CODE, EMP_LAST_NAME, EMP_FIRST_NAME, PHONE, EMP_EMAIL, 
		C.COM_NM, DEPT_NM, TEAM_NM, POSITION_NM, "LEVEL", TEAM_NO
		FROM ADD_EMP AE
		JOIN PERSONAL_ADDR_BOOK P ON(P.ADDR_BOOK_NO = AE.ADDR_BOOK_NO)
		JOIN EMPLOYEE E ON(E.EMP_CODE = AE.EMP_CODE)
		JOIN COMPANY C ON(C.COM_NO = E.COM_NO)
		LEFT JOIN TEAM T USING(TEAM_NO)
		LEFT JOIN DEPARTMENT D ON(D.DEPT_NO = T.DEPT_NO)
		LEFT JOIN POSITION USING(POSITION_NO)
		WHERE E.EMP_DEL_FL = 'N'
		AND P.EMP_CODE =  #{empCode}
		ORDER BY "LEVEL", TEAM_NO ASC
	</select>
	
	<!-- DB에 있는 주소록들은 그룹명만 업데이트 -->
	<update id="changeGroupName">
		UPDATE PERSONAL_ADDR_BOOK SET
		ADDR_NAME = #{addrName}
		WHERE ADDR_BOOK_NO = #{addrBookNo}
	</update>
	
	<!-- 기존 DB에 없는 주소록 INSERT -->
	<insert id="insertGroup">
		INSERT INTO PERSONAL_ADDR_BOOK VALUES(
			SEQ_PERSONAL_ADDR_BOOK.NEXTVAL,
			#{addrName},
			#{loginEmpCode}
		)
	</insert>
	
	<!-- 그룹 삭제 -->
	<delete id="deleteGroup">
		DELETE FROM PERSONAL_ADDR_BOOK
		WHERE EMP_CODE = #{loginEmpCode}
		AND ADDR_BOOK_NO NOT IN(${groupIdx})
	</delete>
	
	<!-- 그룹 하나만 남았을 때 삭제 기능 수행 시 테이블 전부 비우기 -->
	<delete id="deleteAllGroup">
		DELETE FROM PERSONAL_ADDR_BOOK
		WHERE EMP_CODE = #{loginEmpCode}
	</delete>
	
	<!-- 주소록 이름 중복 검사 -->
	<select id="checkAddrName" resultType="_int">
		SELECT COUNT(*)
		FROM PERSONAL_ADDR_BOOK
		WHERE ADDR_NAME = #{addrName}
		AND EMP_CODE = #{loginEmpCode}
	</select>
	
	<!-- 주소록에 등록된 사원 정보 상세 조회 -->
	<select id="empDetail" resultType="Employee2">
		SELECT EMP_CODE, EMP_NO, EMP_ID, EMP_LAST_NAME, EMP_FIRST_NAME, PHONE, EMP_ADDRESS, 
		TO_CHAR(EMP_BIRTH, 'YYYY-MM-DD') EMP_BIRTH, TO_CHAR(HIRE_DATE, 'YYYY-MM-DD') HIRE_DATE, 
		CONTRACT_TYPE, EMP_TEL, WORK_PLACE, EMP_EMAIL, PROFILE_IMG,  
		DEPT_NM, TEAM_NM, POSITION_NM, POSITION_NO, "DOMAIN"
		FROM EMPLOYEE E
		JOIN COMPANY C ON(C.COM_NO = E.COM_NO)
		LEFT JOIN TEAM T USING(TEAM_NO)
		LEFT JOIN DEPARTMENT D ON(D.DEPT_NO = T.DEPT_NO)
		LEFT JOIN POSITION USING(POSITION_NO)
		WHERE EMP_DEL_FL = 'N'
		AND EMP_CODE = #{empCode}
		AND E.COM_NO = #{comNo}
	</select>
	
	<!-- 개인 주소록에 등록된 사원 삭제 -->
	<delete id="deleteAddr">
		DELETE FROM ADD_EMP
		WHERE ADDR_BOOK_NO = #{groupCode}
		AND EMP_CODE = #{empCode}
	</delete>
	
	<!-- 개인 주소록에 이미 추가된 사원인이 중복 검사 -->
	<select id="checkAddrEmp" resultType="_int">
		SELECT COUNT(*)
		FROM PERSONAL_ADDR_BOOK P
		JOIN ADD_EMP AE ON(AE.ADDR_BOOK_NO = P.ADDR_BOOK_NO)
		WHERE P.EMP_CODE = #{loginEmpCode}
		AND P.ADDR_BOOK_NO = #{selectValue}
		AND AE.EMP_CODE = #{empCode}
	</select>
	
	<!-- 개인 주소록에 사원 추가 -->
	<insert id="addToMyAddr">
		INSERT INTO ADD_EMP VALUES(
			SEQ_ADD_EMP.NEXTVAL,
			#{selectValue},
			#{empCode}
		)
	</insert>
	
	<!-- 개인 주소록 그룹 식별키만 조회  -->
	<select id="selectAllMyAddr">
		SELECT ADDR_BOOK_NO "addrBookNo"
		FROM PERSONAL_ADDR_BOOK
		WHERE EMP_CODE = #{empCode}
	</select>
	
	<!-- 주소록 사원 전체 삭제 -->
	<delete id="deleteAllMyAddr">
		DELETE FROM ADD_EMP
		WHERE ADDR_BOOK_NO = #{addrBookNo}
	</delete>
	
</mapper>